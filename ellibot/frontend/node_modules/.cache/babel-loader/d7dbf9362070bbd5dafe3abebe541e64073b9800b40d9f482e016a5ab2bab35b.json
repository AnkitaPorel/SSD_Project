{"ast":null,"code":"var _jsxFileName = \"/home/ankita/Downloads/ELLIBOT/ellibot/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport UserPage from './pages/UserPage';\nimport AdminPage from './pages/AdminPage';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport './styles/LoginPage.css';\nimport './styles/RegisterPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      setIsAuthenticated(true);\n      if (user.email === 'Admin@ellibot.com') {\n        setIsAdmin(true);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/user\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          isAuthenticated: isAuthenticated,\n          children: /*#__PURE__*/_jsxDEV(UserPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          isAuthenticated: isAuthenticated && isAdmin,\n          children: /*#__PURE__*/_jsxDEV(AdminPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wqYoM5Zkli0xb0Rjmti0YIIgN1M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","LoginPage","RegisterPage","UserPage","AdminPage","ProtectedRoute","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","isAdmin","setIsAdmin","user","JSON","parse","localStorage","getItem","email","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ankita/Downloads/ELLIBOT/ellibot/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState} from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport LoginPage from './pages/LoginPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport UserPage from './pages/UserPage';\r\nimport AdminPage from './pages/AdminPage';\r\nimport ProtectedRoute from './components/ProtectedRoute';\r\nimport './styles/LoginPage.css'; \r\nimport './styles/RegisterPage.css';\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user) {\r\n      setIsAuthenticated(true);\r\n      if (user.email === 'Admin@ellibot.com') {\r\n        setIsAdmin(true);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n      <Route path=\"/\" element={<LoginPage />} />\r\n        <Route path=\"/register\" element={<RegisterPage />} />\r\n\r\n        {/* Protected route for user */}\r\n        <Route\r\n          path=\"/user\"\r\n          element={\r\n            <ProtectedRoute isAuthenticated={isAuthenticated}>\r\n              <UserPage />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n\r\n        {/* Protected route for admin */}\r\n        <Route\r\n          path=\"/admin\"\r\n          element={\r\n            <ProtectedRoute isAuthenticated={isAuthenticated && isAdmin}>\r\n              <AdminPage />\r\n            </ProtectedRoute>\r\n          }\r\n        />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACjD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAO,wBAAwB;AAC/B,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACd,MAAMmB,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,IAAIJ,IAAI,EAAE;MACRH,kBAAkB,CAAC,IAAI,CAAC;MACxB,IAAIG,IAAI,CAACK,KAAK,KAAK,mBAAmB,EAAE;QACtCN,UAAU,CAAC,IAAI,CAAC;MAClB;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA,CAACT,MAAM;IAAAsB,QAAA,eACLb,OAAA,CAACR,MAAM;MAAAqB,QAAA,gBACPb,OAAA,CAACP,KAAK;QAACqB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEf,OAAA,CAACN,SAAS;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxCnB,OAAA,CAACP,KAAK;QAACqB,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEf,OAAA,CAACL,YAAY;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGrDnB,OAAA,CAACP,KAAK;QACJqB,IAAI,EAAC,OAAO;QACZC,OAAO,eACLf,OAAA,CAACF,cAAc;UAACK,eAAe,EAAEA,eAAgB;UAAAU,QAAA,eAC/Cb,OAAA,CAACJ,QAAQ;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MACjB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAGFnB,OAAA,CAACP,KAAK;QACJqB,IAAI,EAAC,QAAQ;QACbC,OAAO,eACLf,OAAA,CAACF,cAAc;UAACK,eAAe,EAAEA,eAAe,IAAIE,OAAQ;UAAAQ,QAAA,eAC1Db,OAAA,CAACH,SAAS;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MACjB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACjB,EAAA,CA1CQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}