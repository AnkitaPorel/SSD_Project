{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project SSD\\\\SSD 3\\\\SSD_Project\\\\ellibot\\\\frontend\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/RegisterPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URI = \"http://localhost:5001/api/\";\nconst RegisterPage = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [department, setDepartment] = useState('');\n  const [error, setError] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const navigate = useNavigate('/login');\n  const handleRegister = async event => {\n    event.preventDefault();\n\n    // Basic validation\n    if (!name || !email || !password || !department) {\n      setError('Please fill in all fields.');\n      return;\n    }\n    if (password.length < 7) {\n      setError('Password must be at least 7 characters long.');\n      return;\n    }\n    setIsSubmitting(true);\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        department\n      })\n    };\n    try {\n      const response = await fetch(BACKEND_URI + 'register', requestOptions);\n      const data = await response.json();\n      if (response.ok) {\n        alert(data.msg);\n        setName('');\n        setEmail('');\n        setPassword('');\n        setDepartment('');\n        navigate('/');\n      } else {\n        setError(data.msg || 'Registration failed.');\n      }\n    } catch (err) {\n      setError('Something went wrong with the registration.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const departmentOptions = ['Underwriting', 'Claims', 'Actuarial', 'Sales and Marketing', 'Customer Service', 'Policy Administration', 'Finance and Accounting', 'Legal and Compliance', 'Information Technology (IT)', 'Human Resources (HR)', 'Risk Management', 'Reinsurance', 'Product Development'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Ellibot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A Conversational Requirement Elicitation Tool for Reporting Domain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegister,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            autoComplete: \"new-password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: department,\n            onChange: e => setDepartment(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), departmentOptions.map((dept, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: dept,\n              children: dept\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: isSubmitting ? 'Submitting...' : 'Register'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"xp9EiU+C95NtHnhY0lVDpM5Gyy4=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","BACKEND_URI","RegisterPage","_s","name","setName","email","setEmail","password","setPassword","department","setDepartment","error","setError","isSubmitting","setIsSubmitting","navigate","handleRegister","event","preventDefault","length","requestOptions","method","headers","body","JSON","stringify","response","fetch","data","json","ok","alert","msg","err","departmentOptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","required","autoComplete","map","dept","index","disabled","_c","$RefreshReg$"],"sources":["F:/Project SSD/SSD 3/SSD_Project/ellibot/frontend/src/pages/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/RegisterPage.css';\r\n\r\nconst BACKEND_URI = \"http://localhost:5001/api/\";\r\n\r\nconst RegisterPage = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [department, setDepartment] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const navigate = useNavigate('/login');\r\n\r\n  const handleRegister = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Basic validation\r\n    if (!name || !email || !password || !department) {\r\n      setError('Please fill in all fields.');\r\n      return;\r\n    }\r\n\r\n    if (password.length < 7) {\r\n      setError('Password must be at least 7 characters long.');\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ name, email, password, department }),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(BACKEND_URI + 'register', requestOptions);\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        alert(data.msg);\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setDepartment('');\r\n        navigate('/');\r\n      } else {\r\n        setError(data.msg || 'Registration failed.');\r\n      }\r\n    } catch (err) {\r\n      setError('Something went wrong with the registration.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const departmentOptions = [\r\n    'Underwriting', 'Claims', 'Actuarial', 'Sales and Marketing', 'Customer Service',\r\n    'Policy Administration', 'Finance and Accounting', 'Legal and Compliance',\r\n    'Information Technology (IT)', 'Human Resources (HR)', 'Risk Management',\r\n    'Reinsurance', 'Product Development'\r\n  ];\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <div className=\"welcome-section\">\r\n        <h1>Welcome to Ellibot</h1>\r\n        <p>A Conversational Requirement Elicitation Tool for Reporting Domain</p>\r\n      </div>\r\n\r\n      <div className=\"register-form\">\r\n        <h2>Register</h2>\r\n        <form onSubmit={handleRegister}>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              autoComplete='new-password'\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <select\r\n              value={department}\r\n              onChange={(e) => setDepartment(e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\">Select Department</option>\r\n              {departmentOptions.map((dept, index) => (\r\n                <option key={index} value={dept}>{dept}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          <button type=\"submit\" disabled={isSubmitting}>\r\n            {isSubmitting ? 'Submitting...' : 'Register'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}