{"ast":null,"code":"var _jsxFileName = \"/home/ankita/Downloads/ELLIBOT/ellibot/frontend/src/pages/AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport MetaModelUpload from '../components/MetaModelUpload';\nimport '../styles/AdminPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [requirements, setRequirements] = useState([]);\n  const [summaries, setSummaries] = useState([]);\n  const [isLoadingSummaries, setIsLoadingSummaries] = useState(false);\n  const [emailSent, setEmailSent] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchSummaries = async () => {\n      setIsLoadingSummaries(true);\n      try {\n        const response = await fetch('http://localhost:5001/api/get-summaries');\n        if (!response.ok) {\n          throw new Error('Failed to fetch summaries');\n        }\n        const data = await response.json();\n        setSummaries(data.summaries || []);\n      } catch (error) {\n        console.error('Error fetching summaries:', error);\n      } finally {\n        setIsLoadingSummaries(false);\n      }\n    };\n    fetchSummaries();\n  }, []);\n  const handleSendToEngineers = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/send-user-responses', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fixedEmails: ['xyz@gmail.com', 'abc@gmail.com']\n        })\n      });\n      if (response.ok) {\n        alert('User responses sent successfully to the data engineering team!');\n        setEmailSent(true);\n      } else {\n        console.error('Error sending user responses:', await response.json());\n        alert('Failed to send user responses.');\n      }\n    } catch (error) {\n      console.error('Error sending user responses:', error);\n      alert('An error occurred while sending user responses.');\n    }\n  };\n  const handleLogout = () => {\n    navigate('/'); // Redirect to Login Page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logout-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome, here you can upload your meta model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload the meta-model for user to interact with and review the generated report requirements.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meta-model-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"meta-model-title\",\n          children: \"Upload Meta-Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MetaModelUpload, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"requirements-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"requirements-title\",\n          children: \"Report Summaries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), isLoadingSummaries ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading summaries...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this) : summaries.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No summaries available yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: summaries.map((summary, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: summary\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendToEngineers,\n          disabled: emailSent,\n          children: emailSent ? 'Email Sent!' : 'Send User Responses to Engineers'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"h6yF6jjHKWTBwfWVeac4zswKuLE=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","MetaModelUpload","jsxDEV","_jsxDEV","AdminPage","_s","requirements","setRequirements","summaries","setSummaries","isLoadingSummaries","setIsLoadingSummaries","emailSent","setEmailSent","navigate","fetchSummaries","response","fetch","ok","Error","data","json","error","console","handleSendToEngineers","method","headers","body","JSON","stringify","fixedEmails","alert","handleLogout","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","summary","index","disabled","_c","$RefreshReg$"],"sources":["/home/ankita/Downloads/ELLIBOT/ellibot/frontend/src/pages/AdminPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport MetaModelUpload from '../components/MetaModelUpload';\r\nimport '../styles/AdminPage.css';\r\n\r\nconst AdminPage = () => {\r\n  const [requirements, setRequirements] = useState([]);\r\n  const [summaries, setSummaries] = useState([]);\r\n  const [isLoadingSummaries, setIsLoadingSummaries] = useState(false);\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchSummaries = async () => {\r\n      setIsLoadingSummaries(true);\r\n      try {\r\n        const response = await fetch('http://localhost:5001/api/get-summaries');\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch summaries');\r\n        }\r\n        const data = await response.json();\r\n        setSummaries(data.summaries || []);\r\n      } catch (error) {\r\n        console.error('Error fetching summaries:', error);\r\n      } finally {\r\n        setIsLoadingSummaries(false);\r\n      }\r\n    };\r\n\r\n    fetchSummaries();\r\n  }, []);\r\n\r\n  const handleSendToEngineers = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5001/api/send-user-responses', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ fixedEmails: ['xyz@gmail.com', 'abc@gmail.com'] }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('User responses sent successfully to the data engineering team!');\r\n        setEmailSent(true);\r\n      } else {\r\n        console.error('Error sending user responses:', await response.json());\r\n        alert('Failed to send user responses.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending user responses:', error);\r\n      alert('An error occurred while sending user responses.');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    navigate('/');  // Redirect to Login Page\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      {/* Logout button */}\r\n      <div className=\"logout-section\">\r\n        <button onClick={handleLogout} className=\"logout-button\">Logout</button>\r\n      </div>\r\n\r\n      <div className=\"welcome-section\">\r\n        <h1>Welcome, here you can upload your meta model</h1>\r\n        <p>Upload the meta-model for user to interact with and review the generated report requirements.</p>\r\n      </div>\r\n\r\n      {/* Horizontal alignment for meta-model upload and requirements */}\r\n      <div className=\"content-section\">\r\n        <div className=\"meta-model-section\">\r\n          <h2 className=\"meta-model-title\">Upload Meta-Model</h2>\r\n          <MetaModelUpload />\r\n        </div>\r\n        <div className=\"requirements-section\">\r\n          <h2 className=\"requirements-title\">Report Summaries</h2>\r\n          {isLoadingSummaries ? (\r\n            <p>Loading summaries...</p>\r\n          ) : summaries.length === 0 ? (\r\n            <p>No summaries available yet.</p>\r\n          ) : (\r\n            <ul>\r\n              {summaries.map((summary, index) => (\r\n                <li key={index}>{summary}</li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n          <button onClick={handleSendToEngineers} disabled={emailSent}>\r\n            {emailSent ? 'Email Sent!' : 'Send User Responses to Engineers'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}