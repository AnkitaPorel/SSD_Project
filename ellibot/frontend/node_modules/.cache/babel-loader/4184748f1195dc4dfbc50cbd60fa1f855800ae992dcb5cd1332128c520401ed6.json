{"ast":null,"code":"var _jsxFileName = \"/home/ankita/Downloads/ELLIBOT/ellibot/frontend/src/components/MetaModelUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MetaModelUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!file) {\n      alert('Please upload a JSON file.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch('http://localhost:5001/api/upload-meta-model', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(data.msg);\n      } else {\n        alert(`Error: ${data.msg}`);\n      }\n    } catch (error) {\n      console.error('Error uploading meta-model:', error);\n      alert('Failed to upload meta-model.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meta-model-upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"(Json Format)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".json\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(MetaModelUpload, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = MetaModelUpload;\nexport default MetaModelUpload;\nvar _c;\n$RefreshReg$(_c, \"MetaModelUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MetaModelUpload","_s","file","setFile","handleFileChange","event","target","files","handleSubmit","preventDefault","alert","formData","FormData","append","response","fetch","method","body","data","json","ok","msg","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","_c","$RefreshReg$"],"sources":["/home/ankita/Downloads/ELLIBOT/ellibot/frontend/src/components/MetaModelUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst MetaModelUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (!file) {\r\n      alert('Please upload a JSON file.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5001/api/upload-meta-model', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        alert(data.msg);\r\n      } else {\r\n        alert(`Error: ${data.msg}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error uploading meta-model:', error);\r\n      alert('Failed to upload meta-model.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"meta-model-upload\">\r\n      <p>(Json Format)</p>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"file\" accept=\".json\" onChange={handleFileChange} />\r\n        <button type=\"submit\">Upload</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MetaModelUpload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMO,gBAAgB,GAAIC,KAAK,IAAK;IAClCF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,KAAK,IAAK;IACpCA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB,IAAI,CAACP,IAAI,EAAE;MACTQ,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;QAC1EC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,IAAIL,QAAQ,CAACM,EAAE,EAAE;QACfV,KAAK,CAACQ,IAAI,CAACG,GAAG,CAAC;MACjB,CAAC,MAAM;QACLX,KAAK,CAAC,UAAUQ,IAAI,CAACG,GAAG,EAAE,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDZ,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAED,oBACEX,OAAA;IAAKyB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC1B,OAAA;MAAA0B,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACpB9B,OAAA;MAAM+B,QAAQ,EAAEtB,YAAa;MAAAiB,QAAA,gBAC3B1B,OAAA;QAAOgC,IAAI,EAAC,MAAM;QAACC,MAAM,EAAC,OAAO;QAACC,QAAQ,EAAE7B;MAAiB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChE9B,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA5CID,eAAe;AAAAkC,EAAA,GAAflC,eAAe;AA8CrB,eAAeA,eAAe;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}